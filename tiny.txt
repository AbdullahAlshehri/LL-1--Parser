/* Tiny Grammar */
/* Re-written to take order of precedence into account */
/* CS3240 -- James McCarty, Rob Rayborn, Logan Blyth */

/* Starting Grammar */
<Tiny-program> : begin <statement-list> end
<statement-list> : <statement-list> <statement> | <statement>
<statement> : print ( <exp-list> );
<statement> : ID := <exp>;
<statement> : read ( <id-list> );
<id-list> : <id-list>, ID | ID
<exp-list> : <exp-list>, <exp> | <exp>
<exp> : ID | INTNUM | ( <exp> )
<exp> : <exp> <bin-op> <exp>
<bin-op> : +|-|*|%

/* Remove left recursion */
<statement-list>  : <statement> <statement-list>'
<statement-list>' : <statement> <statement-list>' | epsilon

<id-list>  : ID <id-list>'
<id-list>' : , ID | epsilon

<exp-list>  : <exp> <exp-list>'
<exp-list>' : , <exp> | epsilon

<exp>  : <bin-op> <exp>'
<exp>' : <bin-op> <exp> | epsilon

/* After left recursion removal */
<Tiny-program> : begin <statement-list> end
<statement-list>  : <statement> <statement-list>'
<statement-list>' : <statement> <statement-list>' | epsilon
<statement> : print ( <exp-list> );
<statement> : ID := <exp>;
<statement> : read ( <id-list> );
<id-list>  : ID <id-list>'
<id-list>' : , ID | epsilon
<exp-list>  : <exp> <exp-list>'
<exp-list>' : , <exp> | epsilon
<exp> : ID | INTNUM | ( <exp> )
<exp>  : <bin-op> <exp>'
<exp>' : <bin-op> <exp> | epsilon
<bin-op> : +|-|*|%


